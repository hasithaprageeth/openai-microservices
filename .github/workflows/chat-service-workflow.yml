name: chat-service workflow

on:
  push:
    branches:
      - develop
      - stage
      - main
  pull_request:
    branches:
      - develop
      - stage
      - main

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          pip install -r chat_service/requirements.txt
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          cd chat_service/tests
          pytest

  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ env.DOCKERHUB_USERNAME }}
        password: ${{ env.DOCKERHUB_TOKEN }}

    - name: Extract branch name
      id: extract_branch
      run: echo "::set-output name=branch::$(echo ${GITHUB_REF#refs/heads/})"

    - name: Build and push chat_service image
      uses: docker/build-push-action@v2
      with:
        context: ./chat_service
        push: true
        tags: ${{ env.DOCKERHUB_USERNAME }}/chat_service:${{ steps.extract_branch.outputs.branch }}-latest